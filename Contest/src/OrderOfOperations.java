
import java.util.Arrays;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Trung Pham
 */
public class OrderOfOperations {

    int[] dp;

    public int minTime(String[] s) {
        int n = s.length;
        int[] data = new int[n];
        dp = new int[1 << 20];
        Arrays.fill(dp, -1);
        for (int i = 0; i < n; i++) {
            data[i] = Integer.parseInt(s[i], 2);
        }

        return cal(0, data);
    }

    public int cal(int mask, int[] data) {
        if (dp[mask] != -1) {
            return dp[mask];
        }
        int result = Integer.MAX_VALUE;
        boolean ok = false;
        for (int i : data) {
            int v = cost(mask, i);

            if (v != 0) {
                ok = true;
                int tmp = v + cal(mask | i, data);
                if (tmp < result) {
                    result = tmp;
                }
            }
        }
        if (!ok) {
            result = 0;
        }
        return dp[mask] = result;
    }

    public int cost(int a, int b) {
        int k = Integer.bitCount((~a & b));
        
        return k * k;
    }

    public static void main(String[] args) {
        String[] data = {"10000000000000000000", "01000000000000000000", "00100000000000000000", "00010000000000000000", "00001000000000000000", "00000100000000000000", "00000010000000000000", "00000001000000000000", "00000000100000000000", "00000000010000000000", "00000000001000000000", "00000000000100000000", "00000000000010000000", "00000000000001000000", "00000000000000100000", "00000000000000010000", "00000000000000001000", "00000000000000000100", "00000000000000000010", "00000000000000000001", "10111100110101100000", "10110001111000111010", "11110100101010010001", "11010101110101010010", "10000011010000100001", "10001110100010011101", "01111111111011010110", "01011100010101010111", "10001010000010111110", "01101101011111001101", "00111000000011100101", "01010011001000111001", "00110000101110010000", "01000001000001100111", "10100111101110010000", "00000110101000110001", "01101111101101101000", "00010100000011010001", "00001110010011100100", "10111101100100000100", "01000000101110001001", "00011011111001001011", "00010001000001111001", "01101110101101101111", "10011110011010001100", "10011111010110000100", "10000000000100101011", "11000100010110110110", "00000100111110111011", "11101011010010011110"};
        System.out.println(new OrderOfOperations().minTime(data));
    }
}
